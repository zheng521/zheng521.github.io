<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>初见</title>
  
  
  <link href="https://github.com/zheng521/atom.xml" rel="self"/>
  
  <link href="https://github.com/zheng521/"/>
  <updated>2023-04-01T04:49:51.267Z</updated>
  <id>https://github.com/zheng521/</id>
  
  <author>
    <name>zheng</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>必会手写代码</title>
    <link href="https://github.com/zheng521/2023/04/01/%E5%BF%85%E4%BC%9A%E6%89%8B%E5%86%99%E4%BB%A3%E7%A0%81/"/>
    <id>https://github.com/zheng521/2023/04/01/%E5%BF%85%E4%BC%9A%E6%89%8B%E5%86%99%E4%BB%A3%E7%A0%81/</id>
    <published>2023-04-01T04:33:14.000Z</published>
    <updated>2023-04-01T04:49:51.267Z</updated>
    
    <content type="html"><![CDATA[<h3 id="new-实现"><a href="#new-实现" class="headerlink" title="new 实现"></a>new 实现</h3><hr><ol><li>创建一个新对象</li><li>将新对象的原型属性指向构造函数的原型对象</li><li>将构造函数的作用域赋给新对象（因此this就指向了这个新对象）</li><li>执行构造函数中的代码（为这个新对象添加属性）</li><li>返回新对象 (判断新对象是否为对象)</li></ol><p>&#96;&#96;</p><pre><code>function myNew(Func) &#123;  let obj = &#123;&#125;  obj._prop_ = Func.prototype   let result = Func.apply(obj, arguments)  return typeof result === &#39;object&#39; ? result : obj&#125;</code></pre><p>&#96;&#96;</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;new-实现&quot;&gt;&lt;a href=&quot;#new-实现&quot; class=&quot;headerlink&quot; title=&quot;new 实现&quot;&gt;&lt;/a&gt;new 实现&lt;/h3&gt;&lt;hr&gt;
&lt;ol&gt;
&lt;li&gt;创建一个新对象&lt;/li&gt;
&lt;li&gt;将新对象的原型属性指向构造函数的原型对象&lt;/li&gt;
</summary>
      
    
    
    
    
    <category term="interview" scheme="https://github.com/zheng521/tags/interview/"/>
    
  </entry>
  
</feed>
